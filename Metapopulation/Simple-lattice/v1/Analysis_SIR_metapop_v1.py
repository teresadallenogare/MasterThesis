"""

--------------------------------------------------------------------

Author : Teresa Dalle Nogare
Version : 14 November 2023

--------------------------------------------------------------------

Analysis of the metapopulation SIR simulations:
- Compare the same R0 generated by different beta and mu to understand the velocity of spreading of the simulation

"""

from functions_SIR_metapop_v1 import *
from functions_output_v1 import write_simulation_file
from functions_visualization_v1 import *
import numpy as np
import matplotlib.pyplot as plt
import os


datadir = os.getcwd()
plt.figure(figsize=(8, 8))

# ------------------------------------------------ Parameters  -------------------------------------------------
N_row = 3
N_col = 3

choice_bool = 0
c1 = 0

# R0 = 2
beta_R0_2 = [0.2, 0.3, 0.4]
mu_R0_2 = [0.1, 0.1, 0.1]

sim = 0
idx_node = 0

folder_simulation = datadir + f'/Data_simpleLattice_v1/{N_row}x{N_col}/choice_bool-{choice_bool}/c1-{c1}/Simulations/'


# Load data
for beta, mu in zip(beta_R0_2, mu_R0_2):
    T = np.load(folder_simulation + f'mu-{mu}/beta-{beta}/T.npy')
    T_sim = np.linspace(0, T-1, T)
    node_population_time = np.load(folder_simulation + f'mu-{mu}/beta-{beta}/sim_{sim}_node_population_time.npy')
    node_NS_time = np.load(folder_simulation + f'mu-{mu}/beta-{beta}/sim_{sim}_node_NS_time.npy')
    node_NI_time = np.load(folder_simulation + f'mu-{mu}/beta-{beta}/sim_{sim}_node_NI_time.npy')
    node_NR_time = np.load(folder_simulation + f'mu-{mu}/beta-{beta}/sim_{sim}_node_NR_time.npy')

    #plt.plot(T_sim, node_NS_time[:, idx_node], label = f'beta = {beta}, mu = {mu}')
    plt.plot(T_sim, node_NI_time[:, idx_node], label = f'beta = {beta}, mu = {mu}')
    #plt.plot(T_sim, node_NR_time[:, idx_node], label = f'beta = {beta}, mu = {mu}')
    plt.legend()
plt.show()




